global !p
from uuid import uuid4
endglobal

global !p
def create_table(snip):
	rows = snip.buffer[snip.line].split('x')[0]
	cols = snip.buffer[snip.line].split('x')[1]
	int_val = lambda string: int(''.join(s for s in string if s.isdigit()))
	rows = int_val(rows)
	cols = int_val(cols)
	offset = cols + 1
	old_spacing = snip.buffer[snip.line][:snip.buffer[snip.line].rfind('\t') + 1]
	snip.buffer[snip.line] = ''
	final_str = old_spacing + "\\begin{bmatrix}\n"
	for i in range(rows):
		final_str += old_spacing + '\t'
		final_str += " & ".join(['$' + str(i * cols + j + offset) for j in range(cols)])
		final_str += " \\\\\\\n"
	final_str += old_spacing + "\\end{bmatrix}\n$0"
	snip.expand_anon(final_str)

def isMath():
		return vim.eval('vimtex#syntax#in_mathzone()') == '1'
endglobal


snippet today "Date"
`date +%F`
endsnippet

snippet now "Now"
`date +%Y-%m-%d_%H:%M` ${0}
endsnippet

pre_expand "create_table(snip)"
snippet "mat(\d+)x(\d+)" "Generate table of *width* by *height*" r
endsnippet

global !p
def fix_indent(snip):
    vim.eval('feedkeys("\<c-f>")')
endglobal


snippet fig "addfig"
\begin{figure*}[!h]
	\centering
	\includegraphics[width=\textwidth]{$1}
	\caption{
		$2
		}
	\label{$3}
\end{figure*}
$0
endsnippet

snippet wrapfig "addfig"
\begin{wrapfigure}{r}{$1\textwidth}
	\centering
	\includegraphics[width=$1\textwidth]{$2}
	\caption{
		$3
		}
	\label{$4}
\end{wrapfigure}
$0
endsnippet



snippet resdoc "resdoc"
%@ $1
%@ Authors: 
%@ Created: `date +%F`
%@ Publish Date: 
%@ URL: 
%@ ref: 
%@ score: 

\input{\string~/me/header.tex}
\begin{document}

\title{$1}
\date{}
\maketitle

Score Justification: $2

\section{Method}
$0

\section{Experiments}

\end{document}
endsnippet

snippet mathdoc "mathdoc"
%@ $1
%@ Created: `date +%F`
%@ Sections: 
%@ Tags: $2

\input{\string~/me/header.tex}
\begin{document}

\title{$1}
\date{}
\maketitle

$0

\end{document}
endsnippet

snippet bookdoc "bookdoc"
%@ $1
%@ Author: $2
%@ Format: $3
%@ Finished: $4
%@ Rating (/10): $5
%@ Year Published: $6
%@ Number of Pages: $7

\input{\string~/me/header.tex}
\begin{document}

\title{$1}
\date{}
\maketitle

$0

\end{document}
endsnippet

snippet moviedoc "moviedoc"
%@ $1
%@ Director: $2
%@ Year Published: $3
%@ Andrew Score: $4
%@ Nikki Score: $5

\input{\string~/me/header.tex}
\begin{document}

\title{$1}
\date{}
\maketitle

$0

\end{document}
endsnippet



snippet mydef "mydef"
\begin{mydef}{$1}{`!p if not snip.c: snip.rv = str(uuid4()).split("-")[0]`}
	$2
\end{mydef}$0
endsnippet

snippet myex "myex"
\begin{myex}{$1}{`!p if not snip.c: snip.rv = str(uuid4()).split("-")[0]`}
	$2
\end{myex}$0
endsnippet

snippet expl "myex"
\begin{expl}{}{`!p if not snip.c: snip.rv = str(uuid4()).split("-")[0]`}
	$1
\end{expl}$0
endsnippet

snippet mytheo "mytheo"
\begin{mytheo}{$1}{`!p if not snip.c: snip.rv = str(uuid4()).split("-")[0]`}
	$2
\end{mytheo}$0
endsnippet

snippet myproof "proof"
\begin{proof}
	Steps:
	\begin{enumerate}
		\item $0
	\end{enumerate}
\end{proof}
endsnippet


snippet sec "Section" 
\section{$1}
$0
endsnippet

snippet subsec "SubSection" 
\subsection{$1}
$0
endsnippet

snippet iid "iid" 
i.i.d. $0
endsnippet

snippet subsubsec "SubSection" 
\subsubsection{$1}
$0
endsnippet

snippet \lab "label" wA
\label{$1} $0
endsnippet

context "isMath()"
snippet qq "quad" wA
\quad $0
endsnippet

context "isMath()"
snippet dd "deriv" wA
\dd$0
endsnippet

snippet exl "expl" iA
\text{\tag*{$1}}$0
endsnippet

snippet UNUSED "expl" iA
\tag*{($1)}$0
endsnippet

snippet beg "begin{} / end{}" bA
\begin{$1}
	$0
\end{$1}
endsnippet

snippet cases "cases"
\begin{cases}
	${1:equation} &\text{ if }${2:case}\\\\
	${3} & ${4}
\end{cases}${0}
endsnippet

snippet oth "otherwise"
\text{ otherwise } $0
endsnippet

snippet lim "limit"
\lim_{$1 \rightarrow $2} $0
endsnippet

snippet lims "lims"
\limsup_{$1 \rightarrow $2} $0
endsnippet

snippet limi "limi"
\liminf_{$1 \rightarrow $2} $0
endsnippet

snippet limo "limit_inf"
\lim_{$1 \rightarrow \infty} $0
endsnippet

snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
$$\begin{align*}
	$1
\end{align*}$$ 
$0
endsnippet

snippet qm "Qoute" wA
\begin{displayqoute}
	$1
\end{displayqoute}$0
endsnippet

snippet qk "Qoute" wA
\`\`$1"$0
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

post_expand "fix_indent(snip)"
snippet * "Individual item" b
\item $0
endsnippet


snippet dn "Math" wA
\begin{align}
	$1
\end{align} $0
endsnippet


snippet bf "Boldface" 
\textbf{${1}}$0
endsnippet

snippet bgame "Black Game" 
\\\\
\newgame
\fenboard{${1}}
\showinverseboard\\\\
$0
endsnippet

snippet wgame "White Game" 
\\\\
\newgame
\fenboard{${1}}
\showboard\\\\
$0
endsnippet

snippet as "Andrew" 
\asn{${1}}$0
endsnippet

snippet asc "Andrew" 
% Andrew `date +%Y-%m-%d\ %H:%M`: ${0}
endsnippet

snippet it "Italics" 
\emph{${1}}$0
endsnippet


snippet h "link" 
\href{${1}}{${2}}$0
endsnippet

snippet cr "link" 
\Cref{${1}}$0
endsnippet

snippet bb "mathbb"
\mathbb{${1}}$0
endsnippet

snippet l| "left|"
\left| 
endsnippet

snippet b| "left|" iA
\Big|_{$1}$0
endsnippet

snippet r| "right|"
\right| 
endsnippet


snippet || "lvert"
\norm*{$1}$0
endsnippet


context "isMath()"
snippet -> "arrow" iA
\rightarrow $0
endsnippet

context "isMath()"
snippet to "arrow" iA
\rightarrow $0
endsnippet

context "isMath()"
snippet d> "darrow" iA
\Rightarrow $0
endsnippet

context "isMath()"
snippet m> "marrow" iA
\mapsto $0
endsnippet

context "isMath()"
snippet in "in" wA
\in $0
endsnippet

context "isMath()"
snippet nin "notin" wA
\notin $0
endsnippet

context "isMath()"
snippet ge "ge" iA
\ge $0
endsnippet

context "isMath()"
snippet le "le" iA
\le $0
endsnippet

context "isMath()"
snippet |> "arrow" iA
\nrightarrow $0
endsnippet

context "isMath()"
snippet up "uparrow" 
\uparrow $0
endsnippet

context "isMath()"
snippet down "downarrow" 
\downarrow $0
endsnippet

snippet l> "arrow" iA
\xrightarrow{$1} $0
endsnippet

context "isMath()"
snippet <- "arrow" iA
\leftarrow $0
endsnippet

context "isMath()"
snippet <| "arrow" iA
\nleftarrow $0
endsnippet

context "isMath()"
snippet amin "argmin" iA
\argmin_{$1}$0
endsnippet

context "isMath()"
snippet amax "argmax" iA
\argmax_{$1} $0
endsnippet

context "isMath()"
snippet sup "sup" iA
\sup$0
endsnippet

context "isMath()"
snippet enf "inf" iA
\inf$0
endsnippet

context "isMath()"
snippet imp "implies" iA
\implies $0
endsnippet

context "isMath()"
snippet d= "dd" iA
\stackrel{d}{=} 
endsnippet

context "isMath()"
snippet s= "s=" iA
\cong
endsnippet

context "isMath()"
snippet Uni "union" iA
\bigcup_{$1}$0
endsnippet

context "isMath()"
snippet Dun "Disjoint Union" iA
\bigsqcup_{$1}$0
endsnippet

context "isMath()"
snippet dun "disjoint union" iA
\sqcup $0
endsnippet

context "isMath()"
snippet Uno "unioninf" iA
\bigcup_{$1}^{\infty} $0
endsnippet

context "isMath()"
snippet uni "smallunion" iA
\cup 
endsnippet

context "isMath()"
snippet sm "setminus" iA
\setminus 
endsnippet

context "isMath()"
snippet we "wedge" iA
\wedge
endsnippet

context "isMath()"
snippet ve "wedge" iA
\vee
endsnippet

context "isMath()"
snippet subs "subset" iA
\subset 
endsnippet

context "isMath()"
snippet subq "subset" iA
\subseteq 
endsnippet

context "isMath()"
snippet emp "emptyset" iA
\emptyset 
endsnippet

context "isMath()"
snippet Ent "intersection" iA
\bigcap_{$1}$0
endsnippet

context "isMath()"
snippet '' "integral" iA
\int
endsnippet

context "isMath()"
snippet Eno "intinf" iA
\bigcap_{$1}^{\infty} $0
endsnippet

context "isMath()"
snippet ent "smallintersection" iA
\cap 
endsnippet

context "isMath()"
snippet ++ "bigplus" iA
\bigoplus $0
endsnippet

context "isMath()"
snippet xx "times"  iA
\times $0
endsnippet

context "isMath()"
snippet o. "hammard"  iA
\odot $0
endsnippet

context "isMath()"
snippet o, "hammard"  iA
\circ $0
endsnippet

context "isMath()"
snippet oo "infinity" iA
\infty $0
endsnippet

context "isMath()"
snippet .. "dot" iA
\dots $0
endsnippet

context "isMath()"
snippet dot "dot" iA
\dot{$1}$0
endsnippet

context "isMath()"
snippet d2o "dot" iA
\ddot{$1}$0
endsnippet

context "isMath()"
snippet ~ "sim" iA
\sim $0
endsnippet

context "isMath()"
snippet =s "simeq" iA
\simeq $0
endsnippet

snippet < "langle"
\langle $0
endsnippet

snippet > "rangle"
\rangle $0
endsnippet

snippet mc "Mathcal"
\mathcal{${1}}$0
endsnippet

snippet mr "Mathscr"
\mathscr{${1}}$0
endsnippet

snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet 1u "superscript" iA
^{$1}$0
endsnippet

snippet ceil "ceil" 
\ceil*{$1}$0
endsnippet

snippet flor "floor" 
\floor*{$1}$0
endsnippet

snippet | "abs" 
\abs*{$1}$0
endsnippet

context "isMath()"
snippet mm "mid" iA
\mid $0
endsnippet

snippet (( "superscript" iA
\left( $1 \right) $0
endsnippet

snippet [[ "superscript" iA
\left[ $1 \right] $0
endsnippet

snippet {{ "brackets" iA
\left\\{ $1 \right\\} $0
endsnippet

context "isMath()"
snippet << "prec" iA
\prec
endsnippet

context "isMath()"
snippet <<= "preceq" iA
\preceq
endsnippet

context "isMath()"
snippet >> "succ" iA
\succ
endsnippet

context "isMath()"
snippet m> "much greater" iA
\gg
endsnippet

context "isMath()"
snippet m< "much lesser" iA
\ll
endsnippet

context "isMath()"
snippet >>= "succeq" iA
\succeq
endsnippet

context "isMath()"
snippet EE "Expectation" iA
\mathbb{E}$0
endsnippet

context "isMath()"
snippet ee "Expectation" iA
\mathcal{E}$0
endsnippet

snippet 11 "indicator"
\mathbbm{1}$0
endsnippet

context "isMath()"
snippet MM "MM" iA
\mathcal{M}$0
endsnippet

context "isMath()"
snippet ER "Error" iA
\mathcal{E}$0
endsnippet

context "isMath()"
snippet RR "RealNums" iA
\mathbb{R}$0
endsnippet

context "isMath()"
snippet QQ "Rationals" iA
\mathbb{Q}$0
endsnippet


context "isMath()"
snippet BB "bb" iA
\mathscr{B}$0
endsnippet

context "isMath()"
snippet HH "RealNums" iA
\mathcal{H}$0
endsnippet

context "isMath()"
snippet hh "Holomorphic" iA
\mathscr{H}$0
endsnippet

context "isMath()"
snippet XX "XX" iA
\mathcal{X}$0
endsnippet

context "isMath()"
snippet YY "YY" iA
\mathcal{Y}$0
endsnippet

context "isMath()"
snippet VV "VV" iA
\mathcal{V}$0
endsnippet

context "isMath()"
snippet NN "NN" iA
\mathcal{N}$0
endsnippet

context "isMath()"
snippet nn "nn" iA
\mathbb{N}$0
endsnippet

context "isMath()"
snippet rr "rr" iA
\mathcal{R}$0
endsnippet

context "isMath()"
snippet AA "AA" iA
\mathcal{A}$0
endsnippet

context "isMath()"
snippet WW "WW" iA
\mathcal{W}$0
endsnippet

context "isMath()"
snippet UU "UU" iA
\mathcal{U}$0
endsnippet

context "isMath()"
snippet aa "aa" iA
\mathscr{A}$0
endsnippet



context "isMath()"
snippet OO "OO" iA
\mathcal{O}$0
endsnippet

context "isMath()"
snippet CC "CC" iA
\mathbb{C}$0
endsnippet

context "isMath()"
snippet SS "SS" iA
\mathcal{S}$0
endsnippet

context "isMath()"
snippet ss "ss" iA
\mathbb{S}$0
endsnippet

context "isMath()"
snippet GG "GG" iA
\mathcal{G}$0
endsnippet

context "isMath()"
snippet TT "TT" iA
\mathcal{T}$0
endsnippet

context "isMath()"
snippet PP "Prob" iA
\mathbb{P}$0
endsnippet

context "isMath()"
snippet pp "pp" iA
\mathcal{P}$0
endsnippet

context "isMath()"
snippet ZZ "ints" iA
\mathbb{Z}$0
endsnippet

context "isMath()"
snippet II "II" iA
\mathcal{I}$0
endsnippet

context "isMath()"
snippet DD "DD" iA
\mathcal{D}$0
endsnippet

context "isMath()"
snippet ll "ll" iA
\ell$0
endsnippet

context "isMath()"
snippet for "forall" iA
\forall $0
endsnippet

context "isMath()"
snippet exi "exists" iA
\exists $0
endsnippet

context "isMath()"
snippet LL "LL" iA
\mathcal{L}$0
endsnippet

context "isMath()"
snippet FF "FF" iA
\mathcal{F}$0
endsnippet

snippet 1d "subscript" iA
_{$1}$0
endsnippet

context "isMath()"
snippet al "alpha" iA
\alpha
endsnippet

context "isMath()"
snippet io "alpha" iA
\iota
endsnippet

context "isMath()"
snippet ze "alpha" iA
\zeta
endsnippet

context "isMath()"
snippet ch "chi" iA
\chi
endsnippet

context "isMath()"
snippet rh "rho" iA
\rho
endsnippet

context "isMath()"
snippet be "beta" iA
\beta
endsnippet

context "isMath()"
snippet et "eta" iA
\eta
endsnippet

context "isMath()"
snippet de "delta" iA
\delta
endsnippet

context "isMath()"
snippet De "Delta" iA
\Delta
endsnippet

context "isMath()"
snippet th "theta" iA
\theta
endsnippet

context "isMath()"
snippet Th "Theta" iA
\Theta
endsnippet

context "isMath()"
snippet til "tilde" iA
\tilde{$1}$0
endsnippet

context "isMath()"
snippet hat "hat" iA
\hat{$1}$0
endsnippet

context "isMath()"
snippet bar "bar" iA
\overline{$1}$0
endsnippet

context "isMath()"
snippet uba "bar" iA
\underline{$1}$0
endsnippet

context "isMath()"
snippet om "omega" iA
\omega
endsnippet

context "isMath()"
snippet Om "Omega" iA
\Omega
endsnippet

context "isMath()"
snippet pi "pi" iA
\pi
endsnippet

context "isMath()"
snippet Pi "Pi" iA
\Pi
endsnippet

context "isMath()"
snippet mu "mu" iA
\mu
endsnippet

context "isMath()"
snippet nu "nu" iA
\nu
endsnippet

context "isMath()"
snippet ap "approx" iA
\approx
endsnippet


context "isMath()"
snippet sig "sigma" iA
\sigma
endsnippet

context "isMath()"
snippet Sig "Sigma" iA
\Sigma
endsnippet

context "isMath()"
snippet lam "lambda" iA
\lambda
endsnippet

context "isMath()"
snippet Lam "Lambda" iA
\Lambda
endsnippet

context "isMath()"
snippet ph "phi" iA
\phi
endsnippet

context "isMath()"
snippet Ph "Phi" iA
\Phi
endsnippet

context "isMath()"
snippet ps "psi" iA
\psi
endsnippet

context "isMath()"
snippet Ps "Psi" iA
\Psi
endsnippet

context "isMath()"
snippet ga "gamma" iA
\gamma
endsnippet

context "isMath()"
snippet Ga "Gamma" iA
\Gamma
endsnippet

context "isMath()"
snippet ep "epsilon" iA
\epsilon
endsnippet

context "isMath()"
snippet ka "epsilon" iA
\kappa
endsnippet

context "isMath()"
snippet sum "sum"
\sum_{$1}$0
endsnippet

context "isMath()"
snippet sumo "sum_inf"
\sum_{$1=$2}^{\infty} $0
endsnippet

context "isMath()"
snippet prodo "prod_inf"
\prod_{$1=$2}^{\infty} $0
endsnippet

context "isMath()"
snippet ubr "underbracket" iA
\underbracket{$0
endsnippet

context "isMath()"
snippet sqr "sqrt" iA
\sqrt{$1}$0
endsnippet

context "isMath()"
snippet sqn "sqrt" iA
\sqrt[$1]{$2}$0
endsnippet

context "isMath()"
snippet prod "prod"
\prod_{$1}$0
endsnippet

context "isMath()"
snippet prop "propto" iA
\propto
endsnippet

context "isMath()"
snippet tt "tt" iA
^\top
endsnippet

context "isMath()"
snippet cc "cc" iA
^c
endsnippet

context "isMath()"
snippet == "equal" iA
&= $0
endsnippet

context "isMath()"
snippet ta "tau" iA
\tau
endsnippet

context "isMath()"
snippet tex "text" iA
\text{$1}$0
endsnippet

context "isMath()"
snippet nab "nabla" iA
\nabla$0
endsnippet

context "isMath()"
snippet par "partial" iA
\partial$0
endsnippet

context "isMath()"
snippet iff "iff" iA
\leftrightarrow $0
endsnippet

context "isMath()"
snippet gt "gets" iA
\gets $0
endsnippet

snippet ** "mult" iA
\cdot $0
endsnippet

context "isMath()"
snippet kl "KL" iA
\kl{$1}{$2}$0
endsnippet

context "isMath()"
snippet cs "choose" iA
{$1 \choose $2}$0
endsnippet

context "isMath()"
snippet exp "exp" iA
\exp$0
endsnippet

context "isMath()"
snippet sin "sin" iA
\sin$0
endsnippet

context "isMath()"
snippet cos "sin" iA
\cos$0
endsnippet

context "isMath()"
snippet tan "tan" iA
\tan$0
endsnippet

context "isMath()"
snippet log "log" iA
\log$0
endsnippet

context "isMath()"
snippet max "max" iA
\max$0
endsnippet

context "isMath()"
snippet mn "log" iA
\min$0
endsnippet

context "isMath()"
snippet ne "ne" iA
\ne $0
endsnippet

context "isMath()"
snippet equ "equiv" iA
\equiv $0
endsnippet
